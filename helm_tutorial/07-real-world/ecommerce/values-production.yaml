# Production environment overrides
global:
  environment: production
  domain: ecommerce.company.com

# Production images with specific tags
images:
  frontend:
    repository: myregistry/ecommerce-frontend
    tag: "2.1.0"
  userService:
    repository: myregistry/user-service
    tag: "1.5.2"
  orderService:
    repository: myregistry/order-service
    tag: "1.3.1"

# Production scaling
scaling:
  frontend:
    replicas: 5
  userService:
    replicas: 10
  orderService:
    replicas: 8

# Production resources
resources:
  frontend:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  userService:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 2000m
      memory: 2Gi
  orderService:
    requests:
      cpu: 300m
      memory: 400Mi
    limits:
      cpu: 1500m
      memory: 1.5Gi

# Use external managed database
postgresql:
  enabled: false

externalDatabase:
  host: "prod-postgres.company.com"
  port: 5432
  database: "ecommerce_prod"
  existingSecret: "prod-db-credentials"

# Production Redis with persistence
redis:
  enabled: true
  auth:
    enabled: true
    existingSecret: "redis-credentials"
  master:
    persistence:
      enabled: true
      size: 20Gi
  replica:
    replicaCount: 2

# Production ingress with TLS
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: ecommerce.company.com
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api/users
          pathType: Prefix  
          service: user-service
        - path: /api/orders
          pathType: Prefix
          service: order-service
  tls:
    - secretName: ecommerce-tls
      hosts:
        - ecommerce.company.com

# Enable autoscaling in production
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70