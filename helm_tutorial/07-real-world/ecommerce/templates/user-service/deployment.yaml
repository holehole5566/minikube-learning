apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ecommerce.fullname" . }}-user-service
  labels:
    {{- include "ecommerce.labels" . | nindent 4 }}
    app.kubernetes.io/component: user-service
spec:
  replicas: {{ .Values.scaling.userService.replicas }}
  selector:
    matchLabels:
      {{- include "ecommerce.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: user-service
  template:
    metadata:
      labels:
        {{- include "ecommerce.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: user-service
    spec:
      containers:
      - name: user-service
        image: "{{ .Values.images.userService.repository }}:{{ .Values.images.userService.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: {{ .Values.global.environment }}
        # Database configuration
        - name: DB_HOST
          {{- if .Values.postgresql.enabled }}
          value: {{ include "ecommerce.fullname" . }}-postgresql
          {{- else }}
          value: {{ .Values.externalDatabase.host }}
          {{- end }}
        - name: DB_NAME
          {{- if .Values.postgresql.enabled }}
          value: {{ .Values.postgresql.auth.database }}
          {{- else }}
          value: {{ .Values.externalDatabase.database }}
          {{- end }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              {{- if .Values.postgresql.enabled }}
              name: {{ include "ecommerce.fullname" . }}-postgresql
              key: postgres-password
              {{- else }}
              name: {{ .Values.externalDatabase.existingSecret }}
              key: password
              {{- end }}
        # Redis configuration
        {{- if .Values.redis.enabled }}
        - name: REDIS_HOST
          value: {{ include "ecommerce.fullname" . }}-redis-master
        - name: REDIS_PORT
          value: "6379"
        {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.resources.userService | nindent 12 }}