# Application configuration
replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ""

# PostgreSQL dependency configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "secretpassword"
    database: "webapp_db"
    username: "webapp_user"
  primary:
    persistence:
      enabled: true
      size: 8Gi

# Redis dependency configuration  
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: false

# External database (when postgresql.enabled=false)
externalDatabase:
  host: "external-postgres.company.com"
  port: 5432
  database: "webapp_prod"
  existingSecret: "db-credentials"

# Service configuration
service:
  type: ClusterIP
  port: 80

# Standard Helm configurations
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""